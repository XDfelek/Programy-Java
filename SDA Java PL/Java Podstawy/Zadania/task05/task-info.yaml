type: edu
files:
- name: src/Task.java
  visible: true
  placeholders:
  - offset: 100
    length: 168
    placeholder_text: // Tu zaimplementuj rozwiązanie
    initial_state:
      length: 31
      offset: 100
    initialized_from_dependency: false
    possible_answer: |-
      Scanner scanner = new Scanner(System.in);
              int number = scanner.nextInt();

              for (int i = 1; i <= number; i = i + 2) {
                  System.out.println(i);
              }
    selected: true
    status: Solved
  text: |-
    import java.util.Scanner;

    public class Task {
        public static void main(String[] args) {
            // Tu zaimplementuj rozwiązanie
        }
    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import org.junit.After;
    import org.junit.Before;
    import org.junit.Test;

    import java.io.ByteArrayInputStream;
    import java.io.ByteArrayOutputStream;
    import java.io.InputStream;
    import java.io.PrintStream;

    import static org.junit.Assert.assertEquals;

    public class Tests {

        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
        private final PrintStream originalOut = System.out;
        private final PrintStream originalErr = System.err;
        private final InputStream originalIn = System.in;

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
            System.setErr(new PrintStream(errContent));
        }

        @After
        public void restoreStreams() {
            System.setOut(originalOut);
            System.setErr(originalErr);
            System.setIn(originalIn);
        }

        @Test
        public void testSolution() {
            String inputText = "15";
            System.setIn(new ByteArrayInputStream(inputText.getBytes()));

            Task.main(new String[]{});

            assertEquals("Dla liczby 15, program powinien wypisać w konsoli liczby 1, 3, 5, 7, 9, 11, 13, 15.", "1\n3\n5\n7\n9\n11\n13\n15", outContent.toString().trim().replaceAll("\r\n", "\n"));
        }

        @Test
        public void testSolution2() {
            String inputText = "1";
            System.setIn(new ByteArrayInputStream(inputText.getBytes()));

            Task.main(new String[]{});

            assertEquals("Dla liczby 1, program powinien wypisać w konsoli liczbę 1.", "1", outContent.toString().trim());
        }

        @Test
        public void testSolution3() {
            String inputText = "0";
            System.setIn(new ByteArrayInputStream(inputText.getBytes()));

            Task.main(new String[]{});

            assertEquals("Dla liczby 0, program nie powinien nic wypisać w konsoli.", "", outContent.toString().trim());
        }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Fri, 04 Sep 2020 11:44:32 UTC
record: -1
